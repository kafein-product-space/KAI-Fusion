name: PR Checks

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Node.js dependencies
      run: |
        cd client
        npm ci
    
    - name: Run backend linting
      run: |
        cd backend
        ruff check . --output-format=github
    
    - name: Run backend type checking
      run: |
        cd backend
        mypy . --no-error-summary
    
    - name: Run frontend linting
      run: |
        cd client
        npm run lint
    
    - name: Run frontend type checking
      run: |
        cd client
        npm run typecheck
    
    - name: Check backend formatting
      run: |
        cd backend
        ruff format . --check
    
    - name: Run security checks
      run: |
        pip install safety bandit
        safety check
        bandit -r backend/app -f json || true

  test-coverage:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cd client && npm ci
    
    - name: Run backend tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key
        ENVIRONMENT: testing
      run: |
        cd backend
        pytest --cov=app --cov-report=xml --cov-fail-under=80
    
    - name: Run frontend tests with coverage
      run: |
        cd client
        npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml,./client/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella